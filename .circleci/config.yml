version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.6
  codecov: codecov/codecov@3.3.0

executors:
  base:
    parameters: &parameters
      ruby:
        type: string
        default: "3.1"
    working_directory: &workdir ~/solidus
    environment: &environment
      DEFAULT_MAX_WAIT_TIME: 10
      SOLIDUS_RAISE_DEPRECATIONS: true
      RAILS_DEPRECATIONS_BEHAVIOR: raise
      CIRCLE_TEST_REPORTS: /tmp/test-results
      CIRCLE_ARTIFACTS: /tmp/test-artifacts
      BUNDLE_WITHOUT: "lint,release"
    docker:
      - image: &image cimg/ruby:<< parameters.ruby >>-browsers

  postgres:
    parameters: *parameters
    working_directory: *workdir
    environment:
      <<: *environment
      DB: postgresql
      DB_HOST: localhost
      DB_USERNAME: root
    docker:
      - image: *image
      - image: jhawthorn/circleci-postgres-fast
        environment:
          POSTGRES_USER: root

  mysql:
    parameters: *parameters
    working_directory: *workdir
    environment:
      <<: *environment
      DB: mysql
      DB_HOST: 127.0.0.1
      DB_USERNAME: root
    docker:
      - image: *image
      - image: cimg/mysql:5.7

  sqlite:
    parameters: *parameters
    working_directory: *workdir
    environment:
      <<: *environment
      DB: sqlite
    docker:
      - image: *image

commands:
  setup:
    steps:
      - checkout
      - browser-tools/install-chrome
      - run:
          name: Check chrome version
          command: |
            google-chrome --version
      - browser-tools/install-chromedriver
      - run:
          name: Check chromedriver version
          command: |
            chromedriver --version
      - run:
          name: "Lock dependencies"
          command: |
            sudo gem update --system
            gem install bundler -v"~> 2.3" --conservative
            bundle lock
            ruby -v > .ruby-version
      - restore_cache:
          keys:
            - solidus-gems-v4-{{checksum ".ruby-version"}}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - solidus-gems-v4-{{checksum ".ruby-version"}}-{{ .Branch }}
            - solidus-gems-v4-{{checksum ".ruby-version"}}-main
            - solidus-gems-v4-{{checksum ".ruby-version"}}

      - run: |
          bundle config set path 'vendor/bundle'
          bundle check || bundle install
          bundle clean

      - save_cache:
          key: solidus-gems-v4-{{checksum ".ruby-version"}}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - libvips

  test:
    steps:
      - run:
          name: "Run Admin Tests"
          command: ./bin/build-ci admin
      - run:
          name: "Run Api Tests"
          command: ./bin/build-ci api
      - run:
          name: "Run Backend Tests"
          command: ./bin/build-ci backend
      - run:
          name: "Run Backend JS Tests"
          command: ./bin/build-ci "backend JS"
      - run:
          name: "Run Core Tests"
          command: ./bin/build-ci core
      - run:
          name: "Run Sample Tests"
          command: ./bin/build-ci sample
      - run:
          name: "Run Legacy Promotion Tests"
          command: ./bin/build-ci legacy_promotions
      - run:
          name: "Run Friendly Promotion Tests"
          command: ./bin/build-ci promotions

      - store_artifacts:
          path: /tmp/test-artifacts
          destination: test-artifacts

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results

  libvips:
    steps:
      - run:
          name: Install libvips
          command: |
            sudo apt-get update
            sudo apt-get install -yq libvips-dev

  install_solidus:
    parameters:
      flags:
        type: string
        default: "# no options"
        description: "flags to be passed to `bin/rails g solidus:install"
    steps:
      - run:
          name: "Cleanup & check rails version"
          command: |
            sudo gem update --system
            gem install bundler -v"~> 2.4"
            gem environment path
            rm -rf /tmp/my_app /tmp/.ruby-versions # cleanup previous runs
            rm -rf /tmp/my_app /tmp/.gems-versions # cleanup previous runs

            ruby -v >> /tmp/.ruby-versions
            gem --version >> /tmp/.gems-versions
            bundle --version >> /tmp/.gems-versions
            gem search -eq rails -v "~> 7" -v "< 8.0" >> /tmp/.gems-versions # get the latest rails from rubygems
            gem search -eq solidus >> /tmp/.gems-versions # get the latest solidus from rubygems

            cat /tmp/.ruby-versions
            cat /tmp/.gems-versions
      - restore_cache:
          keys:
            - solidus-installer-v11-{{ checksum "/tmp/.ruby-versions" }}-{{ checksum "/tmp/.gems-versions" }}
            - solidus-installer-v11-{{ checksum "/tmp/.ruby-versions" }}-
      - run:
          name: "Prepare the rails application"
          command: |
            cd /tmp
            test -d my_app || (gem install rails -v "< 8.0" && gem install solidus)
            test -d my_app || rails new my_app --skip-git
      - save_cache:
          key: solidus-installer-v11-{{ checksum "/tmp/.ruby-versions" }}-{{ checksum "/tmp/.gems-versions" }}
          paths:
            - /tmp/my_app
            - /home/circleci/.rubygems
      - run:
          name: "Run `solidus:install` with `<<parameters.flags>>`"
          command: |
            cd /tmp/my_app
            bundle add solidus --path "$(ruby -e"puts File.expand_path ENV['CIRCLE_WORKING_DIRECTORY']")"
            unset RAILS_ENV # avoid doing everything on the test environment
            bin/rails generate solidus:install --auto-accept <<parameters.flags>>

  test_page:
    parameters:
      app_root:
        type: string
        default: "/tmp/my_app"
      path:
        type: string
        default: "/"
      expected_text:
        type: string

    steps:
      - run:
          name: "Check the contents of the <<parameters.path>> page"
          command: |
            cd <<parameters.app_root>>
            unset RAILS_ENV # avoid doing everything on the test environment
            bin/rails server -p 3000 &
            wget --quiet --output-document - --tries=30 --retry-connrefused "http://localhost:3000<<parameters.path>>" | grep "<<parameters.expected_text>>"
            echo "Exited with $?"
            kill $(cat "tmp/pids/server.pid")

  install_dummy_app:
    parameters:
      extra_gems:
        type: string
        default: ""
        description: "Gems to be added to the extension's Gemfile before running the installer"
    steps:
      - run:
          name: "Test `rake task: extensions:test_app` <<#parameters.extra_gems>>(with <<parameters.extra_gems>>)<</parameters.extra_gems>>"
          command: |
            rm -rf /tmp/dummy_extension # cleanup previous runs
            mkdir -p /tmp/dummy_extension
            cd /tmp/dummy_extension
            bundle init
            bundle add rails -v "< 8.0" --skip-install
            bundle add sqlite3 -v "~> 2.0" --skip-install
            test -n "<<parameters.extra_gems>>" && bundle add <<parameters.extra_gems>> --skip-install
            bundle add solidus --path "$(ruby -e"puts File.expand_path ENV['CIRCLE_WORKING_DIRECTORY']")"
            export LIB_NAME=set # dummy requireable file
            bundle exec rake -rrails -rspree/testing_support/extension_rake -e'Rake::Task["extension:test_app"].invoke'

jobs:
  solidus_installer:
    executor:
      name: sqlite
      ruby: "3.1"
    steps:
      - checkout
      - run:
          name: "Skip for Solidus older than 4.2"
          command: |
            ruby -I. -rcore/lib/spree/core/version.rb -e "exit Spree.solidus_gem_version >= Gem::Version.new('4.2')" ||
              circleci-agent step halt
      - libvips
      - install_solidus:
          flags: "--sample=false --frontend=starter --authentication=devise"
      - test_page:
          expected_text: "<title>Sample Store</title>"
      - run:
          name: Ensure the correct PayPal is installed for SSF
          command: |
            cd /tmp/my_app
            bundle list | grep 'solidus_paypal_commerce_platform (1.'
      - install_solidus:
          flags: "--sample=false --frontend=starter --authentication=devise --payment-method=stripe"
      - test_page:
          expected_text: "<title>Sample Store</title>"
      - install_dummy_app
      - run:
          name: "Ensure extension test app is created"
          command: |
            test -d /tmp/dummy_extension/spec/dummy

  test_solidus:
    parameters:
      database:
        type: string
        default: postgres
      ruby:
        type: string
        default: "3.2"
      rails:
        type: string
        default: "7.1"
      paperclip:
        type: boolean
        default: true
    executor:
      name: << parameters.database >>
      ruby: << parameters.ruby >>
    parallelism: 3
    environment:
      DISABLE_ACTIVE_STORAGE: << parameters.paperclip >>
      BUILDKITE_ANALYTICS_EXECUTION_NAME_PREFIX: "(<< parameters.ruby >>:<< parameters.rails >>:<< parameters.database >>:<< parameters.paperclip >>)"
    steps:
      - checkout
      - run:
          name: "Set the RAILS_VERSION environment variable"
          command: |
            # If << parameters.rails >> is a kown branch name, use the latest version of that branch
            # otherwise interpret it as a partial version number.
            RAILS_VERSION=$(echo "<< parameters.rails >>" | grep -qE "(stable|main)" && echo "~> << parameters.rails >>.0" || echo "<< parameters.rails >>")
            echo "RAILS_VERSION=$RAILS_VERSION" >> $BASH_ENV
            source $BASH_ENV
      - setup
      - test

  # This job creates a dir to hold coverage data, run test suites with coverage enabled and
  # generate the coverage report.
  test_solidus_with_coverage:
    parameters:
      database:
        type: string
        default: postgres
      ruby:
        type: string
        default: "3.2"
    executor:
      name: << parameters.database >>
      ruby: << parameters.ruby >>
    parallelism: 3
    environment:
      COVERAGE: "true"
      COVERAGE_DIR: /tmp/coverage
      DISABLE_ACTIVE_STORAGE: false
    steps:
      - setup
      - run:
          name: Setup Coverage Env Vars
          command: |
            echo 'export COVERAGE_FILE=/tmp/coverage/coverage.xml' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Verify Coverage Env Vars
          command: |
            echo $COVERAGE
            echo /tmp/coverage
            echo /tmp/coverage/coverage.xml
      - run:
          name: Setup Coverage Directory
          command: mkdir -p /tmp/coverage
      - test
      - run:
          name: Report Coverage
          command: bundle exec rake solidus:coverage[cobertura]
      - codecov/upload:
          file: /tmp/coverage/coverage.xml

workflows:
  build:
    jobs:
      - solidus_installer
      - test_solidus_with_coverage # Only test with coverage support with the default versions

      # Based on supported versions for the current Solidus release and recommended versions from
      # https://www.fastruby.io/blog/ruby/rails/versions/compatibility-table.html.
      - test_solidus:
          name: &name "test-rails-<<matrix.rails>>-ruby-<<matrix.ruby>>-<<matrix.database>>-<<#matrix.paperclip>>paperclip<</matrix.paperclip>><<^matrix.paperclip>>activestorage<</matrix.paperclip>>"
          matrix:
            {
              parameters:
                {
                  rails: ["7.0", "7.1", "7.2"],
                  ruby: ["3.1"],
                  database: ["mysql"],
                  paperclip: [true],
                },
            }
      - test_solidus:
          name: *name
          matrix:
            {
              parameters:
                {
                  rails: ["7.0", "7.1", "7.2"],
                  ruby: ["3.1"],
                  database: ["postgres"],
                  paperclip: [false],
                },
            }
      - test_solidus:
          name: *name
          matrix:
            {
              parameters:
                {
                  rails: ["7.1"],
                  ruby: ["3.2"],
                  database: ["sqlite"],
                  paperclip: [false],
                },
            }
      - test_solidus:
          name: *name
          matrix:
            {
              parameters:
                {
                  rails: ["7.2", "main"],
                  ruby: ["3.3.5"],
                  database: ["sqlite"],
                  paperclip: [false],
                },
            }
